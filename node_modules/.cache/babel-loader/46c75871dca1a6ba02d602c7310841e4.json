{"ast":null,"code":"//Define our labelmap\nconst labelMap = {\n  1: {\n    name: 'Thank You',\n    color: 'yellow'\n  },\n  2: {\n    name: 'Hello',\n    color: 'brown'\n  },\n  3: {\n    name: 'Nice',\n    color: 'lime'\n  },\n  4: {\n    name: 'Name',\n    color: 'pink'\n  },\n  5: {\n    name: 'Help',\n    color: 'purple'\n  },\n  6: {\n    name: 'Yes',\n    color: 'magenta'\n  },\n  7: {\n    name: 'I Love You',\n    color: 'green'\n  }\n}; //Define a drawing function\n\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx) => {\n  for (let i = 0; i <= boxes.length; i++) {\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\n      //Extract variables\n      const [y, x, height, width] = boxes[i];\n      const text = classes[i]; //Set Styling\n\n      ctx.strokeStyle = labelMap[text]['color'];\n      ctx.lineWidth = 10;\n      ctx.fillStyle = 'white';\n      ctx.font = '30px Arial'; //Draw\n\n      ctx.beginPath();\n      ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10);\n      ctx.rect(x * imgWidth, y * imgHeight, width * imgWidth / 2, height * imgHeight / 1.5);\n      ctx.stroke();\n    }\n  }\n};","map":{"version":3,"sources":["D:/Senior Project/RealTimeSignDetection/ReactComputerVisionTemplate/src/utilities.js"],"names":["labelMap","name","color","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG;AACb,KAAE;AAACC,IAAAA,IAAI,EAAE,WAAP;AAAoBC,IAAAA,KAAK,EAAE;AAA3B,GADW;AAEb,KAAE;AAACD,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAFW;AAGb,KAAE;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAHW;AAIb,KAAE;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAJW;AAKb,KAAE;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GALW;AAMb,KAAE;AAACD,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GANW;AAOb,KAAE;AAACD,IAAAA,IAAI,EAAE,YAAP;AAAqBC,IAAAA,KAAK,EAAE;AAA5B;AAPW,CAAjB,C,CAYA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyDC,GAAzD,KAA+D;AACnF,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEP,KAAK,CAACQ,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9B,QAAGP,KAAK,CAACO,CAAD,CAAL,IAAYN,OAAO,CAACM,CAAD,CAAnB,IAA0BL,MAAM,CAACK,CAAD,CAAN,GAAUJ,SAAvC,EAAiD;AAC7C;AACA,YAAM,CAACM,CAAD,EAAGC,CAAH,EAAKC,MAAL,EAAYC,KAAZ,IAAqBZ,KAAK,CAACO,CAAD,CAAhC;AACA,YAAMM,IAAI,GAAGZ,OAAO,CAACM,CAAD,CAApB,CAH6C,CAK7C;;AACAD,MAAAA,GAAG,CAACQ,WAAJ,GAAkBlB,QAAQ,CAACiB,IAAD,CAAR,CAAe,OAAf,CAAlB;AACAP,MAAAA,GAAG,CAACS,SAAJ,GAAgB,EAAhB;AACAT,MAAAA,GAAG,CAACU,SAAJ,GAAgB,OAAhB;AACAV,MAAAA,GAAG,CAACW,IAAJ,GAAW,YAAX,CAT6C,CAW7C;;AACAX,MAAAA,GAAG,CAACY,SAAJ;AACAZ,MAAAA,GAAG,CAACa,QAAJ,CAAavB,QAAQ,CAACiB,IAAD,CAAR,CAAe,MAAf,IAAyB,KAAzB,GAAiCO,IAAI,CAACC,KAAL,CAAWnB,MAAM,CAACK,CAAD,CAAN,GAAU,GAArB,IAA0B,GAAxE,EAA6EG,CAAC,GAACN,QAA/E,EAAyFK,CAAC,GAACJ,SAAF,GAAY,EAArG;AACAC,MAAAA,GAAG,CAACgB,IAAJ,CAASZ,CAAC,GAACN,QAAX,EAAqBK,CAAC,GAACJ,SAAvB,EAAkCO,KAAK,GAACR,QAAN,GAAe,CAAjD,EAAoDO,MAAM,GAACN,SAAP,GAAiB,GAArE;AACAC,MAAAA,GAAG,CAACiB,MAAJ;AAEH;AACJ;AACJ,CArBM","sourcesContent":["//Define our labelmap\r\nconst labelMap = {\r\n    1:{name: 'Thank You', color: 'yellow'},\r\n    2:{name: 'Hello', color: 'brown'},\r\n    3:{name: 'Nice', color: 'lime'},\r\n    4:{name: 'Name', color: 'pink'},\r\n    5:{name: 'Help', color: 'purple'},\r\n    6:{name: 'Yes', color: 'magenta'},\r\n    7:{name: 'I Love You', color: 'green'},\r\n\r\n}\r\n\r\n\r\n//Define a drawing function\r\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\r\n    for(let i=0; i<=boxes.length; i++){\r\n        if(boxes[i] && classes[i] && scores[i]>threshold){\r\n            //Extract variables\r\n            const [y,x,height,width] = boxes[i]\r\n            const text = classes[i]\r\n\r\n            //Set Styling\r\n            ctx.strokeStyle = labelMap[text]['color']\r\n            ctx.lineWidth = 10\r\n            ctx.fillStyle = 'white'\r\n            ctx.font = '30px Arial'\r\n\r\n            //Draw\r\n            ctx.beginPath()\r\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\r\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5)\r\n            ctx.stroke()\r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}